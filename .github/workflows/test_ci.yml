name: Test Raccoon Post-Quantum Digital Signature Scheme

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [g++, clang++]

    steps:
    - uses: actions/checkout@v4
    - name: Setup Google-Test
      run: |
        pushd ~
        git clone https://github.com/google/googletest.git -b v1.15.0
        pushd googletest
        mkdir build
        pushd build
        cmake .. -DBUILD_GMOCK=OFF
        make
        sudo make install
        popd
        popd
        popd
    - name: Execute Tests on ${{matrix.os}}, compiled with ${{matrix.compiler}}
      run: CXX=${{matrix.compiler}} make -j

    - name: Execute Tests with AddressSanitizer, in DEBUG mode, on Ubuntu, compiled with ${{matrix.compiler}}
      if: ${{matrix.os == 'ubuntu-latest'}}
      run: ulimit -s 65536 && CXX=${{matrix.compiler}} make debug_asan_test -j
    - name: Execute Tests with AddressSanitizer, in RELEASE mode, on Ubuntu, compiled with ${{matrix.compiler}}
      if: ${{matrix.os == 'ubuntu-latest'}}
      run: ulimit -s 65536 && CXX=${{matrix.compiler}} make release_asan_test -j
    - name: Execute Tests with UndefinedBehaviourSanitizer, in DEBUG mode, on Ubuntu, compiled with ${{matrix.compiler}}
      if: ${{matrix.os == 'ubuntu-latest'}}
      run: ulimit -s 65536 && CXX=${{matrix.compiler}} make debug_ubsan_test -j
    - name: Execute Tests with UndefinedBehaviourSanitizer, in RELEASE mode, on Ubuntu, compiled with ${{matrix.compiler}}
      if: ${{matrix.os == 'ubuntu-latest'}}
      run: ulimit -s 65536 && CXX=${{matrix.compiler}} make release_ubsan_test -j

    - name: Execute Tests with AddressSanitizer, in DEBUG mode, on MacOS, compiled with ${{matrix.compiler}}
      if: ${{matrix.os == 'macos-latest'}}
      run: CXX=${{matrix.compiler}} make debug_asan_test -j
    - name: Execute Tests with AddressSanitizer, in RELEASE mode, on MacOS, compiled with ${{matrix.compiler}}
      if: ${{matrix.os == 'macos-latest'}}
      run: CXX=${{matrix.compiler}} make release_asan_test -j
    - name: Execute Tests with UndefinedBehaviourSanitizer, in DEBUG mode, on MacOS, compiled with ${{matrix.compiler}}
      if: ${{matrix.os == 'macos-latest'}}
      run: CXX=${{matrix.compiler}} make debug_ubsan_test -j
    - name: Execute Tests with UndefinedBehaviourSanitizer, in RELEASE mode, on MacOS, compiled with ${{matrix.compiler}}
      if: ${{matrix.os == 'macos-latest'}}
      run: CXX=${{matrix.compiler}} make release_ubsan_test -j
